// Code generated by protoc-gen-go.
// source: google.golang.org/genproto/googleapis/api/serviceconfig/monitoring.proto
// DO NOT EDIT!

package google_api // import "google.golang.org/genproto/googleapis/api/serviceconfig"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Monitoring configuration of the service.
//
// The example below shows how to configure monitored resources and metrics
// for monitoring. In the example, a monitored resource and two metrics are
// defined. The `library.googleapis.com/book/returned_count` metric is sent
// to both producer and consumer projects, whereas the
// `library.googleapis.com/book/overdue_count` metric is only sent to the
// consumer project.
//
//     monitored_resources:
//     - type: library.googleapis.com/branch
//       labels:
//       - key: /city
//         description: The city where the library branch is located in.
//       - key: /name
//         description: The name of the branch.
//     metrics:
//     - name: library.googleapis.com/book/returned_count
//       metric_kind: DELTA
//       value_type: INT64
//       labels:
//       - key: /customer_id
//     - name: library.googleapis.com/book/overdue_count
//       metric_kind: GAUGE
//       value_type: INT64
//       labels:
//       - key: /customer_id
//     monitoring:
//       producer_destinations:
//       - monitored_resource: library.googleapis.com/branch
//         metrics:
//         - library.googleapis.com/book/returned_count
//       consumer_destinations:
//       - monitored_resource: library.googleapis.com/branch
//         metrics:
//         - library.googleapis.com/book/returned_count
//         - library.googleapis.com/book/overdue_count
//
type Monitoring struct {
	// Monitoring configurations for sending metrics to the producer project.
	// There can be multiple producer destinations, each one must have a
	// different monitored resource type. A metric can be used in at most
	// one producer destination.
	ProducerDestinations []*Monitoring_MonitoringDestination `protobuf:"bytes,1,rep,name=producer_destinations,json=producerDestinations" json:"producer_destinations,omitempty"`
	// Monitoring configurations for sending metrics to the consumer project.
	// There can be multiple consumer destinations, each one must have a
	// different monitored resource type. A metric can be used in at most
	// one consumer destination.
	ConsumerDestinations []*Monitoring_MonitoringDestination `protobuf:"bytes,2,rep,name=consumer_destinations,json=consumerDestinations" json:"consumer_destinations,omitempty"`
}

func (m *Monitoring) Reset()                    { *m = Monitoring{} }
func (m *Monitoring) String() string            { return proto.CompactTextString(m) }
func (*Monitoring) ProtoMessage()               {}
func (*Monitoring) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *Monitoring) GetProducerDestinations() []*Monitoring_MonitoringDestination {
	if m != nil {
		return m.ProducerDestinations
	}
	return nil
}

func (m *Monitoring) GetConsumerDestinations() []*Monitoring_MonitoringDestination {
	if m != nil {
		return m.ConsumerDestinations
	}
	return nil
}

// Configuration of a specific monitoring destination (the producer project
// or the consumer project).
type Monitoring_MonitoringDestination struct {
	// The monitored resource type. The type must be defined in
	// [Service.monitored_resources][google.api.Service.monitored_resources] section.
	MonitoredResource string `protobuf:"bytes,1,opt,name=monitored_resource,json=monitoredResource" json:"monitored_resource,omitempty"`
	// Names of the metrics to report to this monitoring destination.
	// Each name must be defined in [Service.metrics][google.api.Service.metrics] section.
	Metrics []string `protobuf:"bytes,2,rep,name=metrics" json:"metrics,omitempty"`
}

func (m *Monitoring_MonitoringDestination) Reset()         { *m = Monitoring_MonitoringDestination{} }
func (m *Monitoring_MonitoringDestination) String() string { return proto.CompactTextString(m) }
func (*Monitoring_MonitoringDestination) ProtoMessage()    {}
func (*Monitoring_MonitoringDestination) Descriptor() ([]byte, []int) {
	return fileDescriptor11, []int{0, 0}
}

func init() {
	proto.RegisterType((*Monitoring)(nil), "google.api.Monitoring")
	proto.RegisterType((*Monitoring_MonitoringDestination)(nil), "google.api.Monitoring.MonitoringDestination")
}

func init() {
	proto.RegisterFile("google.golang.org/genproto/googleapis/api/serviceconfig/monitoring.proto", fileDescriptor11)
}

var fileDescriptor11 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xd9, 0x0a, 0x4a, 0x47, 0x50, 0x0c, 0x16, 0x4a, 0x4f, 0xa2, 0x97, 0x1e, 0x74, 0x03,
	0xfa, 0x06, 0xc5, 0x83, 0x1e, 0x84, 0xb2, 0x2f, 0x50, 0x63, 0x76, 0x0c, 0x81, 0xee, 0x4c, 0x99,
	0x64, 0x7d, 0x32, 0x1f, 0xd0, 0xb4, 0xbb, 0xdb, 0x5d, 0xa4, 0xa7, 0xbd, 0x84, 0x64, 0xe6, 0x9f,
	0xff, 0xfb, 0x33, 0xf0, 0xe6, 0x98, 0xdd, 0x16, 0x73, 0xc7, 0x5b, 0x43, 0x2e, 0x67, 0x71, 0xda,
	0x21, 0xed, 0x84, 0x23, 0xeb, 0xa6, 0x65, 0x76, 0x3e, 0xe8, 0x74, 0xe8, 0x80, 0xf2, 0xe3, 0x2d,
	0x5a, 0xa6, 0x6f, 0xef, 0x74, 0xc5, 0xe4, 0x23, 0x8b, 0x4f, 0x43, 0x07, 0xb5, 0x82, 0xd6, 0x29,
	0x49, 0x17, 0xef, 0x63, 0x5d, 0x0d, 0x11, 0x47, 0x13, 0x3d, 0x53, 0x68, 0x6c, 0xef, 0x7f, 0x27,
	0x00, 0x1f, 0x47, 0x96, 0x32, 0x30, 0x4b, 0xf5, 0xb2, 0xb6, 0x28, 0x9b, 0x12, 0x43, 0xf4, 0xd4,
	0xa8, 0xe7, 0xd9, 0xdd, 0xd9, 0xf2, 0xf2, 0xf9, 0x31, 0xef, 0x53, 0xe4, 0xfd, 0xd8, 0xe0, 0xfa,
	0xda, 0x0f, 0x15, 0xb7, 0x9d, 0xd5, 0xa0, 0x18, 0xf6, 0x88, 0x94, 0x26, 0xd4, 0xd5, 0x7f, 0xc4,
	0x64, 0x0c, 0xa2, 0xb3, 0x1a, 0x22, 0x16, 0x9f, 0x30, 0x3b, 0x29, 0x57, 0x4f, 0xa0, 0xda, 0xc5,
	0x62, 0xb9, 0x11, 0x0c, 0x5c, 0x8b, 0xc5, 0xf4, 0xb7, 0x6c, 0x39, 0x2d, 0x6e, 0x8e, 0x9d, 0xa2,
	0x6d, 0xa8, 0x39, 0x5c, 0x54, 0x18, 0xc5, 0xdb, 0x26, 0xdc, 0xb4, 0xe8, 0x9e, 0xab, 0x07, 0xb8,
	0xb2, 0x5c, 0x0d, 0xa2, 0xae, 0xae, 0x7b, 0xe2, 0x7a, 0xbf, 0xd9, 0x75, 0xf6, 0x75, 0x7e, 0x58,
	0xf1, 0xcb, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x1e, 0xd7, 0x88, 0x05, 0x02, 0x00, 0x00,
}
